name: Advanced CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    name: CI Pipeline
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint stage
        run: npm run lint
        continue-on-error: ${{ matrix.node-version == '16' }}
      
      - name: Test stage
        run: npm run test -- --coverage --watchAll=false
      
      - name: Build stage
        run: npm run build
      
      - name: Create dist folder with main files
        run: |
          mkdir -p dist
          cp -r .next dist/
          cp package.json dist/
          cp README.md dist/ || echo "README.md not found, skipping"
        shell: bash
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            dist/
            .next/
          retention-days: 7
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}-node${{ matrix.node-version }}
          path: coverage/
          retention-days: 7
        if: always()

  deploy-ready:
    name: Deployment Ready
    needs: ci
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: All CI checks passed
        run: echo "All CI stages completed successfully. Ready for deployment!"